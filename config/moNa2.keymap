#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define ZMK_POINTING_DEFAULT_SCRL_VAL 100
#define MOUSE 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos { compatible = "zmk,combos"; };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q           &kp W                      &kp E                        &kp R             &kp T                                                            &kp Y            &kp U                &kp I                &kp O    &kp P
&kp A           &kp S                      &kp D                        &kp F             &kp G        &mt C_VOL_DN C_VOL_DN      &mt C_VOL_UP C_VOL_UP    &kp H            &mt RIGHT_CONTROL J  &mt RIGHT_COMMAND K  &lt 2 L  &lt 3 MINUS
&kp Z           &kp X                      &kp C                        &kp V             &kp B        &mkp MB1                   &mkp MB2                 &kp N            &kp M                &kp COMMA            &kp DOT  &kp SLASH
&kp LEFT_SHIFT  &mt LEFT_ARROW LEFT_ARROW  &mt RIGHT_ARROW RIGHT_ARROW  &lt 1 LANGUAGE_2  &lt 2 SPACE  &mt RIGHT_COMMAND LANG1    &mt BACKSPACE BACKSPACE  &mt ENTER ENTER                                                     &kp RIGHT_SHIFT
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        layer_1 {
            bindings = <
&trans      &trans  &trans  &trans         &trans                                                           &kp ASTERISK                 &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp PLUS
&trans      &trans  &trans  &kp C_AC_HOME  &kp GLOBE         &kp K_MUTE          &mt UP_ARROW UP_ARROW      &kp SLASH                    &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp MINUS
&trans      &trans  &trans  &kp F12        &kp LEFT_COMMAND  &kp LEFT_CONTROL    &mt DOWN_ARROW DOWN_ARROW  &kp N0                       &kp N7        &kp N8        &kp N9        &kp EQUAL
&kp ESCAPE  &trans  &trans  &trans         &trans            &trans              &mt LEFT_ARROW LEFT_ARROW  &mt RIGHT_ARROW RIGHT_ARROW                                            &kp TAB
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        layer_2 {
            bindings = <
&trans      &trans                       &trans                   &trans         &trans                                                             &kp EXCLAMATION              &kp AT_SIGN    &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp SQT
&trans      &mt C_VOLUME_UP C_VOLUME_UP  &mt C_BRI_UP C_BRI_UP    &kp C_AC_HOME  &kp GLOBE         &kp LC(LA(K_MUTE))    &mt UP_ARROW UP_ARROW      &kp QUESTION                 &kp HASH       &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp SEMICOLON
&trans      &mt C_VOL_DN C_VOL_DN        &mt C_BRI_DEC C_BRI_DEC  &kp F12        &kp LEFT_COMMAND  &kp LEFT_CONTROL      &mt DOWN_ARROW DOWN_ARROW  &kp UNDERSCORE               &kp AMPERSAND  &kp LEFT_BRACE        &kp RIGHT_BRACE        &trans
&kp ESCAPE  &trans                       &trans                   &trans         &trans            &trans                &mt LEFT_ARROW LEFT_ARROW  &mt RIGHT_ARROW RIGHT_ARROW                                                              &kp TAB
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        layer_3 {
            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                    &trans  &trans  &trans  &trans  &trans
&trans        &trans        &trans        &trans        &trans        &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans        &trans        &trans        &trans        &trans        &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans        &trans        &trans        &trans        &trans        &trans    &trans  &trans                          &trans
            >;

            sensor-bindings = <&inc_dec_kp C_BRIGHTNESS_INC C_BRI_DEC>;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                         &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans  &trans  &trans  &trans  &trans    &trans       &trans        &trans        &trans        &trans        &trans
&trans  &trans  &trans  &trans  &trans  &trans    &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans  &trans  &trans  &trans  &trans    &trans       &trans                                                  &bt BT_CLR_ALL
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        layer_5 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans                          &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                    &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans                                &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };
    };
};
